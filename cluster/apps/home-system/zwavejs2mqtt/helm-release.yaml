---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app zwavejs2mqtt
  namespace: home-system
spec:
  interval: 15m
  chart:
    spec:
      chart: kah-common-chart
      version: 1.1.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: node-feature-discovery
      namespace: kube-system
  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: zwavejs2mqtt
            spec:
              template:
                spec:
                  tolerations:
                    - key: "hardware"
                      operator: "Equal"
                      value: "rpi"
                      effect: "NoExecute"
  values:
    global:
      nameOverride: *app
    image:
      repository: ghcr.io/zwave-js/zwavejs2mqtt
      tag: 6.15.2
    env:
      TZ: "${TIMEZONE}"
    service:
      main:
        ports:
          http:
            port: 8091
          websocket:
            enabled: true
            port: 3000
    ingress:
      main:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        ingressClassName: "traefik"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: zwavejs2mqtt-tls
    securityContext:
      privileged: true
    persistence:
      config:
        enabled: true
        existingClaim: zwavejs2mqtt-config-v1
        mountPath: "/usr/src/app/store"
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/serial/by-id/usb-0658_0200-if00
        hostPathType: CharDevice
      backup:
        enabled: true
        type: nfs
        server: "${CONFIG_NFS_SERVER_ADDRESS}"
        path: "${CONFIG_NFS_SERVER_PATH}/zwavejs2mqtt"
        mountPath: /usr/src/app/store/backups
        readOnly: false
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/zwave
                  operator: In
                  values:
                    - "true"
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 500Mi
