---
- hosts:
    - portainer
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      pause:
        seconds: 5
  tasks:
    - name: Add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: Install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: Check docker is active
      service:
        name: docker
        state: started
        enabled: yes
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    - name: Adding ubuntu to docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: yes
    - name: Install docker-compose
      ansible.builtin.get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        owner: ubuntu
        group: ubuntu

# Portainer
    - name: Add python repository
      ansible.builtin.apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present
    - name: Install Python 3
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - python3
        - python3-pip
    - name: Install docker python SDK
      ansible.builtin.pip:
        name: docker
        state: present
    - name: Create portainer persistant volume
      become: false
      community.docker.docker_volume:
        name: portainer_data
    - name: Download and install portainer container
      become: false
      community.docker.docker_container:
        name: portainer
        state: started
        image: portainer/portainer-ce:2.15.1-alpine
        ports:
          - 8000:8000
          - 9443:9443
        restart_policy: always
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
